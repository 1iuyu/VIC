language: c
sudo: false # use container based build
notifications:
  email: false

matrix:
  fast_finish: false
  include:
  # Classic Driver
  - compiler: clang
    env: TESTID='classic'
  - compiler: gcc
    env: TESTID='classic'
  - compiler: gcc
    env: TESTID=classic USE_CC=gcc-5
    addons:
      apt:
        packages:
          - gcc-5
          - gcc-5-multilib
          - linux-libc-dev:i386
        sources:
          - ubuntu-toolchain-r-test
  - compiler: clang
    env: TESTID=classic USE_CC=clang-3.6
    addons:
      apt:
        packages:
          - clang-3.6
        sources:
          - llvm-toolchain-precise-3.6
          - ubuntu-toolchain-r-test
  # Image Driver
  - compiler: gcc
    env: TESTID='image'
    addons:
      apt_packages:
        - libnetcdf-dev
        - mpich-bin
  # Python Driver
  - compiler: clang
    env: TESTID="python_2.7"
  - compiler: gcc
    env: TESTID="python_2.7"
  - compiler: clang
    env: TESTID="python_3.4"
  - compiler: gcc
    env: TESTID="python_3.4"
  allow_failures:
  # Image Driver
  - compiler: gcc
    env: TESTID='image'
    addons:
      apt_packages:
        - libnetcdf-dev
        - mpich-bin

before_install:
  - source ci/${TESTID}.travis
  - vic_before_install
install:
  - vic_install
script:
  - vic_script
after_success:
  - vic_after_success
after_failure:
  - vic_after_failure
